@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model EmployeeBOMModel
<head>
	<script>
		.field-validation-valid {
			display: none;
		}

		.validation-summary-valid {
			display: none;
		}
	</script>
</head>

<body>
	@using (Html.BeginForm("MCEAdd", "Employee", FormMethod.Post))
	{
		<div style="border-color:black;">
			<p>Project ID: @Model.ProjectID</p>
			<p>Project Title: @Model.Title</p>
			<p>Project Client: @Model.ClientName</p>
			<p>Project Client Contacts: @Model.ClientContact</p>
			<p>Project Date: @Model.Date</p>
			<p>Project Address: <span>@Model.Address</span>,<span>@Model.City</span>,<span>@Model.Region</span>,<span>@Model.Country</span></p>
			<p>Building Type: @Model.BuildingType</p>
			<p>Number of Storeys: @Model.NumberOfStoreys</p>
			<p>Floor height: @Model.FloorHeight</p>
			<p>Building Length: @Model.BuildingLength</p>
			<p>Building Width:@Model.BuildingWidth</p>
			<p>Template ID: @Model.TemplateID</p>
			<p>Lon: @Model.Longtitude</p>
			<p>Lat: @Model.Latitude</p>
		</div>
		
			
			@Html.HiddenFor(m=>m.totalCost)
			@Html.HiddenFor(m=>m.FormulaID)
			@Html.HiddenFor(m=>m.ProjectID)
			@Html.HiddenFor(m=>m.Provisions)
			@Html.HiddenFor(m=>m.BOMCreationDate)
			@Html.HiddenFor(m=>m.ProjectID)
			@Html.HiddenFor(m=>m.Title)
			@Html.HiddenFor(m=>m.ClientName)
			@Html.HiddenFor(m=>m.ClientContact)
			@Html.HiddenFor(m=>m.Date)
			@Html.HiddenFor(m=>m.Address)
			@Html.HiddenFor(m=>m.City)
			@Html.HiddenFor(m=>m.Region)
			@Html.HiddenFor(m=>m.BuildingType)
			@Html.HiddenFor(m=>m.Country)
			@Html.HiddenFor(m=>m.Longtitude)
			@Html.HiddenFor(m=>m.Latitude)
			@Html.HiddenFor(m=>m.NumberOfStoreys)
			@Html.HiddenFor(m=>m.FloorHeight)
			@Html.HiddenFor(m=>m.BuildingLength)
			@Html.HiddenFor(m=>m.BuildingWidth)
			@Html.HiddenFor(m=>m.TemplateID)

		<div style="display: none">
			@Html.DisplayFor(m=>m.lists)

			@for (int i = 0; i < Model.lists.Count; i++)
			{
				@Html.HiddenFor(m => m.lists[i])
				@Html.HiddenFor(m => m.lists[i].Description)
				@Html.HiddenFor(m=>m.lists[i].ListNumber)
				@Html.HiddenFor(m=>m.lists[i].ListLetter)
				@Html.DisplayFor(m=>m.lists[i].Items)

				@for (int x = 0; x < Model.lists[i].Items.Count; x++)
				{

					@Html.HiddenFor(m=>m.lists[i].Items[x])
					@Html.HiddenFor(m=>m.lists[i].Items[x].ItemNumber)
					@Html.HiddenFor(m=>m.lists[i].Items[x].Description)
					@Html.DisplayFor(m=>m.lists[i].Items[x].Subitems)

					@for (int y = 0; y < Model.lists[i].Items[x].Subitems.Count; y++)
					{
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y])
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].SubitemNumber)
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].MaterialID)
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].MaterialDesc)
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].MaterialQuantity)
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].MaterialQuantityWastage)
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].MaterialQuantityProvisions)
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].MaterialUoM)
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].MaterialCost)
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].SupplierMaterialID)
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].Supplier)
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].TotalUnitRate)
						@Html.HiddenFor(m=>m.lists[i].Items[x].Subitems[y].MaterialAmount)
					}
				}
			}
		</div>


		<table>
			<thead>
				<tr>
					<th></th>
					<th colspan="4">Proposed Materials</th>
					<th colspan="3">Cost Estimate</th>
				</tr>
				<tr>
					<th>Item No.</th>
					<th>Material Name</th>
					<th>Quantity</th>
					<th>UoM</th>
					<th>Cost per unit</th>
					<th>Labour cost</th>
					<th>Total unit rate</th>
					<th>Total Amount</th>
				</tr>
			</thead>
			<tbody>
				@for (int x = 0; x < Model.lists.Count; x++)
				{
					<tr style="background: #BBBBBB">
						<td>
						</td>
						<td colspan="8">@Model.lists[x].Description</td>
					</tr>
					@for (int y = 0; y < Model.lists[x].Items.Count; y++)
					{
						<tr style="background: #EEEEEE">
							<td>@Model.lists[x].Items[y].ItemNumber</td>
							<td colspan="8">@Model.lists[x].Items[y].Description</td>
						</tr>
						@for (int z = 0; z < Model.lists[x].Items[y].Subitems.Count; z++)
						{
							<tr>
								<td>@Model.lists[x].Items[y].Subitems[z].SubitemNumber</td>
								<td>@Model.lists[x].Items[y].Subitems[z].MaterialDesc</td>
								<td>@Model.lists[x].Items[y].Subitems[z].MaterialQuantityProvisions</td>
								<td>@Model.lists[x].Items[y].Subitems[z].MaterialUoM</td>
								<td>@Model.lists[x].Items[y].Subitems[z].MaterialCost</td>
								<td>@Html.TextBoxFor(m=>m.lists[x].Items[y].Subitems[z].LabourCost)</td>
								<td>@Model.lists[x].Items[y].Subitems[z].TotalUnitRate</td>
								<td>@Model.lists[x].Items[y].Subitems[z].MaterialAmount</td>
							</tr>
						}
					}
				}
				<tr style="background: #BBBBBB">
					<td colspan="7" style="text-align:right">Amount:</td>
					<td>@string.Format("{0:N2}", @Model.totalCost)</td>
				</tr>
			</tbody>
		</table>

		<input type="submit" name="submitButton" value="Update" class="button button2" />
		<input type="submit" name="submitButton" value="Submit" class="button button2" />
	}
</body>